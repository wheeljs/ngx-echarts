"use strict";(self.webpackChunkngx_echarts_demo=self.webpackChunkngx_echarts_demo||[]).push([[27],{7027:(p,r,o)=>{o.r(r),o.d(r,{DemoBasicModule:()=>W});var c=o(6814),l=o(2242),T=o(859),f=o(3742),n=o(9212),y=o(3626),v=o(6616),E=o(6987),_=o(6254),d=o(5539);let D=(()=>{class t{constructor(){this.html=o(7302).Z,this.component=o(3474).Z}ngOnInit(){const s=[],a=[],e=[];for(let i=0;i<100;i++)s.push("category"+i),a.push(5*(Math.sin(i/5)*(i/5-10)+i/6)),e.push(5*(Math.cos(i/5)*(i/5-10)+i/6));this.options={legend:{data:["bar","bar2"],align:"left"},tooltip:{},xAxis:{data:s,silent:!1,splitLine:{show:!1}},yAxis:{},series:[{name:"bar",type:"bar",data:a,animationDelay:i=>10*i},{name:"bar2",type:"bar",data:e,animationDelay:i=>10*i+100}],animationEasing:"elasticOut",animationDelayUpdate:i=>5*i}}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-simple"]],decls:2,vars:3,consts:[["echarts","",1,"demo-chart",3,"options"],[3,"html","component"]],template:function(a,e){1&a&&n._UZ(0,"div",0)(1,"app-code-block",1),2&a&&(n.Q6J("options",e.options),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[d.P,l._w]})}return t})();var C=o(2920);let O=(()=>{class t{constructor(){this.html=o(1912).Z,this.component=o(1156).Z}ngOnInit(){const a=[220,182,191,234,290,330,310,123,442,321,90,149,210,122,133,334,198,123,125,220],i=[];for(let m=0;m<a.length;m++)i.push(500);this.options={title:{text:"Check Console for Events"},xAxis:{data:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T"],axisLabel:{inside:!0,color:"#fff"},axisTick:{show:!1},axisLine:{show:!1},z:10},yAxis:{axisLine:{show:!1},axisTick:{show:!1},axisLabel:{color:"#999"}},dataZoom:[{type:"inside"}],series:[{type:"bar",itemStyle:{color:"rgba(0,0,0,0.05)"},barGap:"-100%",barCategoryGap:"40%",data:i,animation:!1},{type:"bar",itemStyle:{color:new C.Z(0,0,0,1,[{offset:0,color:"#83bff6"},{offset:.5,color:"#188df0"},{offset:1,color:"#188df0"}])},emphasis:{itemStyle:{color:new C.Z(0,0,0,1,[{offset:0,color:"#2378f7"},{offset:.7,color:"#2378f7"},{offset:1,color:"#83bff6"}])}},data:a}]}}onChartEvent(s,a){console.log("chart event:",a,s)}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-events"]],decls:2,vars:3,consts:[["echarts","",1,"demo-chart",3,"options","chartInit","chartClick","chartDblClick","chartMouseDown","chartMouseUp","chartMouseOver","chartMouseOut","chartGlobalOut","chartContextMenu","chartDataZoom"],[3,"html","component"]],template:function(a,e){1&a&&(n.TgZ(0,"div",0),n.NdJ("chartInit",function(m){return e.onChartEvent(m,"chartInit")})("chartClick",function(m){return e.onChartEvent(m,"chartClick")})("chartDblClick",function(m){return e.onChartEvent(m,"chartDblClick")})("chartMouseDown",function(m){return e.onChartEvent(m,"chartMouseDown")})("chartMouseUp",function(m){return e.onChartEvent(m,"chartMouseUp")})("chartMouseOver",function(m){return e.onChartEvent(m,"chartMouseOver")})("chartMouseOut",function(m){return e.onChartEvent(m,"chartMouseOut")})("chartGlobalOut",function(m){return e.onChartEvent(m,"chartGlobalOut")})("chartContextMenu",function(m){return e.onChartEvent(m,"chartContextMenu")})("chartDataZoom",function(m){return e.onChartEvent(m,"chartDataZoom")}),n.qZA(),n._UZ(1,"app-code-block",1)),2&a&&(n.Q6J("options",e.options),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[d.P,l._w]})}return t})();const A={color:["#b21ab4","#6f0099","#2a2073","#0b5ea8","#17aecc","#b3b3ff","#eb99ff","#fae6ff","#e6f2ff","#eeeeee"],title:{fontWeight:"normal",color:"#00aecd"},visualMap:{color:["#00aecd","#a2d4e6"]},toolbox:{color:["#00aecd","#00aecd","#00aecd","#00aecd"]},tooltip:{backgroundColor:"rgba(0,0,0,0.5)",axisPointer:{type:"line",lineStyle:{color:"#00aecd",type:"dashed"},crossStyle:{color:"#00aecd"},shadowStyle:{color:"rgba(200,200,200,0.3)"}}},dataZoom:{dataBackgroundColor:"#eee",fillerColor:"rgba(144,197,237,0.2)",handleColor:"#00aecd"},timeline:{lineStyle:{color:"#00aecd"},controlStyle:{color:"#00aecd",borderColor:"00aecd"}},candlestick:{itemStyle:{color:"#00aecd",color0:"#a2d4e6"},lineStyle:{width:1,color:"#00aecd",color0:"#a2d4e6"},areaStyle:{color:"#b21ab4",color0:"#0b5ea8"}},chord:{padding:4,itemStyle:{color:"#b21ab4",borderWidth:1,borderColor:"rgba(128, 128, 128, 0.5)"},lineStyle:{color:"rgba(128, 128, 128, 0.5)"},areaStyle:{color:"#0b5ea8"}},graph:{itemStyle:{color:"#b21ab4"},linkStyle:{color:"#2a2073"}},map:{itemStyle:{color:"#c12e34"},areaStyle:{color:"#ddd"},label:{color:"#c12e34"}},gauge:{axisLine:{lineStyle:{color:[[.2,"#dddddd"],[.8,"#00aecd"],[1,"#f5ccff"]],width:8}}}};var u=o(2840),g=o(855),b=o(1958);let S=(()=>{class t{constructor(){this.html=o(4186).Z,this.component=o(1429).Z,this.data=o(5032).Z,this.coolTheme=A,this.options={title:{left:"50%",text:"Nightingale Rose Diagram",subtext:"Mocking Data",textAlign:"center"},tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},legend:{align:"auto",bottom:10,data:["rose1","rose2","rose3","rose4","rose5","rose6","rose7","rose8"]},calculable:!0,series:[{name:"area",type:"pie",radius:[30,110],roseType:"area",data:[{value:10,name:"rose1"},{value:5,name:"rose2"},{value:15,name:"rose3"},{value:25,name:"rose4"},{value:20,name:"rose5"},{value:35,name:"rose6"},{value:30,name:"rose7"},{value:40,name:"rose8"}]}]}}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-themes"]],decls:11,vars:5,consts:[[1,"button-groups"],["nz-button","","nzType","default",3,"click"],["echarts","",1,"demo-chart",3,"options","theme"],[3,"html","component","data"]],template:function(a,e){1&a&&(n.TgZ(0,"div",0)(1,"button",1),n.NdJ("click",function(){return e.theme=void 0}),n._uU(2,"default"),n.qZA(),n.TgZ(3,"button",1),n.NdJ("click",function(){return e.theme="dark"}),n._uU(4,"dark"),n.qZA(),n.TgZ(5,"button",1),n.NdJ("click",function(){return e.theme="macarons"}),n._uU(6,"macarons(theme file)"),n.qZA(),n.TgZ(7,"button",1),n.NdJ("click",function(){return e.theme=e.coolTheme}),n._uU(8,"cool(theme object)"),n.qZA()(),n._UZ(9,"div",2)(10,"app-code-block",3)),2&a&&(n.xp6(9),n.Q6J("options",e.options)("theme",e.theme),n.xp6(1),n.Q6J("html",e.html)("component",e.component)("data",e.data))},dependencies:[u.ix,g.w,b.dQ,d.P,l._w]})}return t})(),x=(()=>{class t{constructor(){this.html=o(8388).Z,this.component=o(988).Z,this.isLoading=!0,this.options={tooltip:{trigger:"axis",axisPointer:{type:"cross",label:{backgroundColor:"#6a7985"}}},legend:{data:["X-1","X-2","X-3","X-4","X-5"]},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:[{type:"category",boundaryGap:!1,data:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"]}],yAxis:[{type:"value"}],series:[{name:"X-1",type:"line",stack:"counts",areaStyle:{},data:[120,132,101,134,90,230,210]},{name:"X-2",type:"line",stack:"counts",areaStyle:{},data:[220,182,191,234,290,330,310]},{name:"X-3",type:"line",stack:"counts",areaStyle:{},data:[150,232,201,154,190,330,410]},{name:"X-4",type:"line",stack:"counts",areaStyle:{},data:[320,332,301,334,390,330,320]},{name:"X-5",type:"line",stack:"counts",label:{show:!0,position:"top"},areaStyle:{},data:[820,932,901,934,1290,1330,1320]}]}}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-loading"]],decls:5,vars:4,consts:[[1,"button-groups"],["nz-button","","nzType","default",3,"click"],["echarts","","theme","macarons",1,"demo-chart",3,"options","loading"],[3,"html","component"]],template:function(a,e){1&a&&(n.TgZ(0,"div",0)(1,"button",1),n.NdJ("click",function(){return e.isLoading=!e.isLoading}),n._uU(2,"Toggle Loading"),n.qZA()(),n._UZ(3,"div",2)(4,"app-code-block",3)),2&a&&(n.xp6(3),n.Q6J("options",e.options)("loading",e.isLoading),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[u.ix,g.w,b.dQ,d.P,l._w]})}return t})(),M=(()=>{class t{constructor(){this.html=o(9250).Z,this.component=o(4935).Z,this.oneDay=864e5}ngOnInit(){this.data=[],this.now=new Date(1997,9,3),this.value=1e3*Math.random();for(let s=0;s<1e3;s++)this.data.push(this.randomData());this.options={title:{text:"Dynamic Data + Time Axis"},tooltip:{trigger:"axis",formatter:s=>{s=s[0];const a=new Date(s.name);return a.getDate()+"/"+(a.getMonth()+1)+"/"+a.getFullYear()+" : "+s.value[1]},axisPointer:{animation:!1}},xAxis:{type:"time",splitLine:{show:!1}},yAxis:{type:"value",boundaryGap:[0,"100%"],splitLine:{show:!1}},series:[{name:"Mocking Data",type:"line",showSymbol:!1,data:this.data}]},this.timer=setInterval(()=>{for(let s=0;s<5;s++)this.data.shift(),this.data.push(this.randomData());this.updateOptions={series:[{data:this.data}]}},1e3)}ngOnDestroy(){clearInterval(this.timer)}randomData(){return this.now=new Date(this.now.getTime()+this.oneDay),this.value=this.value+21*Math.random()-10,{name:this.now.toString(),value:[[this.now.getFullYear(),this.now.getMonth()+1,this.now.getDate()].join("/"),Math.round(this.value)]}}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-update"]],decls:2,vars:4,consts:[["echarts","",1,"demo-chart",3,"options","merge"],[3,"html","component"]],template:function(a,e){1&a&&n._UZ(0,"div",0)(1,"app-code-block",1),2&a&&(n.Q6J("options",e.options)("merge",e.updateOptions),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[d.P,l._w]})}return t})(),Z=(()=>{class t{constructor(){this.html=o(4125).Z,this.component=o(3765).Z,this.initOpts={renderer:"svg",width:300,height:300},this.options={color:["#3398DB"],tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:[{type:"category",data:["Mon","Tue","Wed","Thu","Fri","Sat","Sun"],axisTick:{alignWithLabel:!0}}],yAxis:[{type:"value"}],series:[{name:"Counters",type:"bar",barWidth:"60%",data:[10,52,200,334,390,330,220]}]}}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-init-opts"]],decls:2,vars:4,consts:[[3,"initOpts","options"],[3,"html","component"]],template:function(a,e){1&a&&n._UZ(0,"echarts",0)(1,"app-code-block",1),2&a&&(n.Q6J("initOpts",e.initOpts)("options",e.options),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[d.P,l._w]})}return t})();var k=o(6691);let w=(()=>{class t{constructor(s){this.msg=s,this.html=o(6201).Z,this.component=o(6367).Z,this.options={backgroundColor:"#2c343c",title:{text:"Customized Pie",left:"center",top:20,textStyle:{color:"#ccc"}},tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},visualMap:{show:!1,min:80,max:600,inRange:{colorLightness:[0,1]}},series:[{name:"Counters",type:"pie",radius:"55%",center:["50%","50%"],data:[{value:335,name:"C-1"},{value:310,name:"C-2"},{value:274,name:"C-3"},{value:235,name:"C-4"},{value:400,name:"C-5"}].sort((a,e)=>a.value-e.value),roseType:"radius",label:{color:"rgba(255, 255, 255, 0.3)"},labelLine:{lineStyle:{color:"rgba(255, 255, 255, 0.3)"},smooth:.2,length:10,length2:20},itemStyle:{color:"#c23531",shadowBlur:200,shadowColor:"rgba(0, 0, 0, 0.5)"},animationType:"scale",animationEasing:"elasticOut",animationDelay:()=>200*Math.random()}]}}onChartInit(s){this.chartInstance=s,console.log("on chart init:",s)}callMethod(s){if(this.chartInstance){const a=this.chartInstance[s]();this.msg.info(`${s}(): ${a||"void"}`),console.log(a)}}static#n=this.\u0275fac=function(a){return new(a||t)(n.Y36(k.dD))};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-instance"]],decls:13,vars:3,consts:[[1,"button-groups"],["nz-button","","nzType","default",3,"click"],["echarts","",1,"demo-chart",3,"options","chartInit"],[3,"html","component"]],template:function(a,e){1&a&&(n.TgZ(0,"div",0)(1,"button",1),n.NdJ("click",function(){return e.callMethod("getWidth")}),n._uU(2,"getWidth()"),n.qZA(),n.TgZ(3,"button",1),n.NdJ("click",function(){return e.callMethod("getHeight")}),n._uU(4,"getHeight()"),n.qZA(),n.TgZ(5,"button",1),n.NdJ("click",function(){return e.callMethod("getDom")}),n._uU(6,"getDom()"),n.qZA(),n.TgZ(7,"button",1),n.NdJ("click",function(){return e.callMethod("getOption")}),n._uU(8,"getOption()"),n.qZA(),n.TgZ(9,"button",1),n.NdJ("click",function(){return e.callMethod("clear")}),n._uU(10,"clear()"),n.qZA()(),n.TgZ(11,"div",2),n.NdJ("chartInit",function(m){return e.onChartInit(m)}),n.qZA(),n._UZ(12,"app-code-block",3)),2&a&&(n.xp6(11),n.Q6J("options",e.options),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[u.ix,g.w,b.dQ,d.P,l._w]})}return t})(),R=(()=>{class t{constructor(){this.html=o(7928).Z,this.component=o(7964).Z,this.options={legend:{},tooltip:{},dataset:{source:[["product","2015","2016","2017"],["Matcha Latte",43.3,85.8,93.7],["Milk Tea",83.1,73.4,55.1],["Cheese Cocoa",86.4,65.2,82.5],["Walnut Brownie",72.4,53.9,39.1]]},xAxis:{type:"category"},yAxis:{},series:[{type:"bar"},{type:"bar"},{type:"bar"}]}}RandomDataset(){this.mergeOptions={dataset:{source:[["product","2015","2016","2017"],["Matcha Latte",...this.getRandomValues()],["Milk Tea",...this.getRandomValues()],["Cheese Cocoa",...this.getRandomValues()],["Walnut Brownie",...this.getRandomValues()]]}}}getRandomValues(){const s=[];for(let a=0;a<3;a++)s.push(100*Math.random());return s}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic-dataset"]],decls:5,vars:4,consts:[[1,"button-groups"],["nz-button","","nzType","default",3,"click"],["echarts","",1,"demo-chart",3,"options","merge"],[3,"html","component"]],template:function(a,e){1&a&&(n.TgZ(0,"div",0)(1,"button",1),n.NdJ("click",function(){return e.RandomDataset()}),n._uU(2,"Random Dataset"),n.qZA()(),n._UZ(3,"div",2)(4,"app-code-block",3)),2&a&&(n.xp6(3),n.Q6J("options",e.options)("merge",e.mergeOptions),n.xp6(1),n.Q6J("html",e.html)("component",e.component))},dependencies:[u.ix,g.w,b.dQ,d.P,l._w]})}return t})();function B(t,h){1&t&&n._UZ(0,"app-basic-simple")}function z(t,h){1&t&&n._UZ(0,"app-basic-dataset")}function I(t,h){1&t&&n._UZ(0,"app-basic-events")}function N(t,h){1&t&&n._UZ(0,"app-basic-themes")}function U(t,h){1&t&&n._UZ(0,"app-basic-loading")}function L(t,h){1&t&&n._UZ(0,"app-basic-update")}function P(t,h){1&t&&n._UZ(0,"app-basic-init-opts")}function G(t,h){1&t&&n._UZ(0,"app-basic-instance")}const X=[{path:"",redirectTo:"basic-usage",pathMatch:"full"},{path:"basic-usage",component:(()=>{class t{constructor(){}static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275cmp=n.Xpm({type:t,selectors:[["app-basic"]],decls:25,vars:1,consts:[["nzTitle","Getting Started"],["nz-page-header-breadcrumb",""],["routerLink","/welcome"],[2,"margin-top","8px",3,"nzTabPosition"],["nzTitle","Simple Chart"],["nz-tab",""],["nzTitle","Dataset"],["nzTitle","Events"],["nzTitle","[theme]"],["nzTitle","[loading]"],["nzTitle","[merge]"],["nzTitle","[initOpts]"],["nzTitle","ECharts Instance"]],template:function(a,e){1&a&&(n.TgZ(0,"nz-page-header",0)(1,"nz-breadcrumb",1)(2,"nz-breadcrumb-item")(3,"a",2),n._uU(4,"Home"),n.qZA()(),n.TgZ(5,"nz-breadcrumb-item"),n._uU(6,"Getting Started"),n.qZA()()(),n._UZ(7,"nz-divider"),n.TgZ(8,"nz-tabset",3)(9,"nz-tab",4),n.YNc(10,B,1,0,"ng-template",5),n.qZA(),n.TgZ(11,"nz-tab",6),n.YNc(12,z,1,0,"ng-template",5),n.qZA(),n.TgZ(13,"nz-tab",7),n.YNc(14,I,1,0,"ng-template",5),n.qZA(),n.TgZ(15,"nz-tab",8),n.YNc(16,N,1,0,"ng-template",5),n.qZA(),n.TgZ(17,"nz-tab",9),n.YNc(18,U,1,0,"ng-template",5),n.qZA(),n.TgZ(19,"nz-tab",10),n.YNc(20,L,1,0,"ng-template",5),n.qZA(),n.TgZ(21,"nz-tab",11),n.YNc(22,P,1,0,"ng-template",5),n.qZA(),n.TgZ(23,"nz-tab",12),n.YNc(24,G,1,0,"ng-template",5),n.qZA()()),2&a&&(n.xp6(8),n.Q6J("nzTabPosition","left"))},dependencies:[y.Dg,y.MO,v.xH,v.xw,v.cj,E.g,_.$O,_.A2,f.rH,D,O,S,x,M,Z,w,R]})}return t})()}];let F=(()=>{class t{static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275mod=n.oAB({type:t});static#e=this.\u0275inj=n.cJS({imports:[f.Bz.forChild(X),f.Bz]})}return t})(),W=(()=>{class t{static#n=this.\u0275fac=function(a){return new(a||t)};static#t=this.\u0275mod=n.oAB({type:t});static#e=this.\u0275inj=n.cJS({imports:[c.ez,T.m,l.Ns,F]})}return t})()},8388:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div class="button-groups">\n  <button (click)="isLoading = !isLoading" nz-button nztype="default">Toggle Loading</button>\n</div>\n<div echarts [options]="options" [loading]="isLoading" theme="macarons" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},7928:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div class="button-groups">\n  <button (click)="RandomDataset()" nz-button nzType="default">Random Dataset</button>\n</div>\n<div echarts [options]="options" [merge]="mergeOptions" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},1912:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div echarts [options]="options" class="demo-chart" (chartInit)="onChartEvent($event, \'chartInit\')" (chartClick)="onChartEvent($event, \'chartClick\')" (chartDblClick)="onChartEvent($event, \'chartDblClick\')" (chartMouseDown)="onChartEvent($event, \'chartMouseDown\')" (chartMouseUp)="onChartEvent($event, \'chartMouseUp\')" (chartMouseOver)="onChartEvent($event, \'chartMouseOver\')" (chartMouseOut)="onChartEvent($event, \'chartMouseOut\')" (chartGlobalOut)="onChartEvent($event, \'chartGlobalOut\')" (chartContextMenu)="onChartEvent($event, \'chartContextMenu\')" (chartDataZoom)="onChartEvent($event, \'chartDataZoom\')"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},4125:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<echarts [initOpts]="initOpts" [options]="options"></echarts>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},6201:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div class="button-groups">\n  <button (click)="callMethod(\'getWidth\')" nz-button nzType="default">getWidth()</button>\n  <button (click)="callMethod(\'getHeight\')" nz-button nzType="default">getHeight()</button>\n  <button (click)="callMethod(\'getDom\')" nz-button nzType="default">getDom()</button>\n  <button (click)="callMethod(\'getOption\')" nz-button nzType="default">getOption()</button>\n  <button (click)="callMethod(\'clear\')" nz-button nzType="default">clear()</button>\n</div>\n<div echarts (chartInit)="onChartInit($event)" [options]="options" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},7302:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div echarts [options]="options" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},4186:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div class="button-groups">\n  <button (click)="theme = undefined" nz-button nzType="default">default</button>\n  <button (click)="theme = \'dark\'" nz-button nzType="default">dark</button>\n  <button (click)="theme = \'macarons\'" nz-button nzType="default">macarons(theme file)</button>\n  <button (click)="theme = coolTheme" nz-button nzType="default">cool(theme object)</button>\n</div>\n<div echarts [options]="options" [theme]="theme" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component" [data]="data"> </app-code-block>\n'},9250:(p,r,o)=>{o.d(r,{Z:()=>l});const l='\x3c!-- DEMO START --\x3e\n<div echarts [options]="options" [merge]="updateOptions" class="demo-chart"></div>\n\x3c!-- DEMO END --\x3e\n\n<app-code-block [html]="html" [component]="component"> </app-code-block>\n'},7964:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component } from '@angular/core';\nimport { EChartsOption } from 'echarts';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-dataset',\n  templateUrl: './basic-dataset.component.html',\n  styleUrls: ['./basic-dataset.component.scss'],\n})\nexport class BasicDatasetComponent {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-dataset.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-dataset.component.ts').default;\n  // IGNORE END\n  options: EChartsOption = {\n    legend: {},\n    tooltip: {},\n    dataset: {\n      // Provide a set of data.\n      source: [\n        ['product', '2015', '2016', '2017'],\n        ['Matcha Latte', 43.3, 85.8, 93.7],\n        ['Milk Tea', 83.1, 73.4, 55.1],\n        ['Cheese Cocoa', 86.4, 65.2, 82.5],\n        ['Walnut Brownie', 72.4, 53.9, 39.1],\n      ],\n    },\n    // Declare an x-axis (category axis).\n    // The category map the first column in the dataset by default.\n    xAxis: { type: 'category' },\n    // Declare a y-axis (value axis).\n    yAxis: {},\n    // Declare several 'bar' series,\n    // every series will auto-map to each column by default.\n    series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }],\n  };\n\n  mergeOptions: EChartsOption;\n\n  RandomDataset() {\n    this.mergeOptions = {\n      dataset: {\n        source: [\n          ['product', '2015', '2016', '2017'],\n          ['Matcha Latte', ...this.getRandomValues()],\n          ['Milk Tea', ...this.getRandomValues()],\n          ['Cheese Cocoa', ...this.getRandomValues()],\n          ['Walnut Brownie', ...this.getRandomValues()],\n        ],\n      },\n    };\n  }\n\n  private getRandomValues() {\n    const res: number[] = [];\n    for (let i = 0; i < 3; i++) {\n      res.push(Math.random() * 100);\n    }\n    return res;\n  }\n}\n"},1156:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component, OnInit } from '@angular/core';\nimport type { ECElementEvent, EChartsOption } from 'echarts';\nimport type { ECActionEvent } from 'echarts/types/src/util/types';\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-events',\n  templateUrl: './basic-events.component.html',\n  styleUrls: ['./basic-events.component.scss'],\n})\nexport class BasicEventsComponent implements OnInit {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-events.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-events.component.ts').default;\n  // IGNORE END\n  options: EChartsOption;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    const dataAxis = [\n      'A',\n      'B',\n      'C',\n      'D',\n      'E',\n      'F',\n      'G',\n      'H',\n      'I',\n      'J',\n      'K',\n      'L',\n      'M',\n      'N',\n      'O',\n      'P',\n      'Q',\n      'R',\n      'S',\n      'T',\n    ];\n    const data = [\n      220, 182, 191, 234, 290, 330, 310, 123, 442, 321, 90, 149, 210, 122, 133, 334, 198, 123, 125,\n      220,\n    ];\n    const yMax = 500;\n    const dataShadow = [];\n\n    for (let i = 0; i < data.length; i++) {\n      dataShadow.push(yMax);\n    }\n\n    this.options = {\n      title: {\n        text: 'Check Console for Events',\n      },\n      xAxis: {\n        data: dataAxis,\n        axisLabel: {\n          inside: true,\n          color: '#fff',\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLine: {\n          show: false,\n        },\n        z: 10,\n      },\n      yAxis: {\n        axisLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        axisLabel: {\n          color: '#999',\n        },\n      },\n      dataZoom: [\n        {\n          type: 'inside',\n        },\n      ],\n      series: [\n        {\n          // For shadow\n          type: 'bar',\n          itemStyle: {\n            color: 'rgba(0,0,0,0.05)',\n          },\n          barGap: '-100%',\n          barCategoryGap: '40%',\n          data: dataShadow,\n          animation: false,\n        },\n        {\n          type: 'bar',\n          itemStyle: {\n            color: new LinearGradient(0, 0, 0, 1, [\n              { offset: 0, color: '#83bff6' },\n              { offset: 0.5, color: '#188df0' },\n              { offset: 1, color: '#188df0' },\n            ]),\n          },\n          emphasis: {\n            itemStyle: {\n              color: new LinearGradient(0, 0, 0, 1, [\n                { offset: 0, color: '#2378f7' },\n                { offset: 0.7, color: '#2378f7' },\n                { offset: 1, color: '#83bff6' },\n              ]),\n            },\n          },\n          data,\n        },\n      ],\n    };\n  }\n\n  onChartEvent(event: ECElementEvent | ECActionEvent, type: string) {\n    console.log('chart event:', type, event);\n  }\n}\n"},3765:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component } from '@angular/core';\nimport type { EChartsOption } from 'echarts';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-init-opts',\n  templateUrl: './basic-init-opts.component.html',\n  styleUrls: ['./basic-init-opts.component.scss'],\n})\nexport class BasicInitOptsComponent {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-init-opts.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-init-opts.component.ts').default;\n  // IGNORE END\n  initOpts = {\n    renderer: 'svg',\n    width: 300,\n    height: 300,\n  };\n\n  options: EChartsOption = {\n    color: ['#3398DB'],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow',\n      },\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        axisTick: {\n          alignWithLabel: true,\n        },\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        name: 'Counters',\n        type: 'bar',\n        barWidth: '60%',\n        data: [10, 52, 200, 334, 390, 330, 220],\n      },\n    ],\n  };\n}\n"},6367:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component } from '@angular/core';\nimport type { ECharts, EChartsOption } from 'echarts';\nimport { NzMessageService } from 'ng-zorro-antd/message';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-instance',\n  templateUrl: './basic-instance.component.html',\n  styleUrls: ['./basic-instance.component.scss'],\n})\nexport class BasicInstanceComponent {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-instance.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-instance.component.ts').default;\n  // IGNORE END\n  chartInstance: ECharts;\n  options: EChartsOption = {\n    backgroundColor: '#2c343c',\n    title: {\n      text: 'Customized Pie',\n      left: 'center',\n      top: 20,\n      textStyle: {\n        color: '#ccc',\n      },\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n    },\n    visualMap: {\n      show: false,\n      min: 80,\n      max: 600,\n      inRange: {\n        colorLightness: [0, 1],\n      },\n    },\n    series: [\n      {\n        name: 'Counters',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '50%'],\n        data: [\n          { value: 335, name: 'C-1' },\n          { value: 310, name: 'C-2' },\n          { value: 274, name: 'C-3' },\n          { value: 235, name: 'C-4' },\n          { value: 400, name: 'C-5' },\n        ].sort((a, b) => a.value - b.value),\n        roseType: 'radius',\n        label: {\n          color: 'rgba(255, 255, 255, 0.3)',\n        },\n        labelLine: {\n          lineStyle: {\n            color: 'rgba(255, 255, 255, 0.3)',\n          },\n          smooth: 0.2,\n          length: 10,\n          length2: 20,\n        },\n        itemStyle: {\n          color: '#c23531',\n          shadowBlur: 200,\n          shadowColor: 'rgba(0, 0, 0, 0.5)',\n        },\n\n        animationType: 'scale',\n        animationEasing: 'elasticOut',\n        animationDelay: () => Math.random() * 200,\n      },\n    ],\n  };\n  constructor(private msg: NzMessageService) {}\n\n  onChartInit(e: ECharts) {\n    this.chartInstance = e;\n    console.log('on chart init:', e);\n  }\n\n  callMethod(type: string) {\n    if (this.chartInstance) {\n      const result = this.chartInstance[type]();\n      this.msg.info(`${type}(): ${result || 'void'}`);\n      console.log(result);\n    }\n  }\n}\n"},988:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component } from '@angular/core';\nimport type { EChartsOption } from 'echarts';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-loading',\n  templateUrl: './basic-loading.component.html',\n  styleUrls: ['./basic-loading.component.scss'],\n})\nexport class BasicLoadingComponent {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\": false}}!./basic-loading.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-loading.component.ts').default;\n  // IGNORE END\n  isLoading = true;\n  options: EChartsOption = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross',\n        label: {\n          backgroundColor: '#6a7985',\n        },\n      },\n    },\n    legend: {\n      data: ['X-1', 'X-2', 'X-3', 'X-4', 'X-5'],\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        type: 'category',\n        boundaryGap: false,\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      },\n    ],\n    yAxis: [\n      {\n        type: 'value',\n      },\n    ],\n    series: [\n      {\n        name: 'X-1',\n        type: 'line',\n        stack: 'counts',\n        areaStyle: {},\n        data: [120, 132, 101, 134, 90, 230, 210],\n      },\n      {\n        name: 'X-2',\n        type: 'line',\n        stack: 'counts',\n        areaStyle: {},\n        data: [220, 182, 191, 234, 290, 330, 310],\n      },\n      {\n        name: 'X-3',\n        type: 'line',\n        stack: 'counts',\n        areaStyle: {},\n        data: [150, 232, 201, 154, 190, 330, 410],\n      },\n      {\n        name: 'X-4',\n        type: 'line',\n        stack: 'counts',\n        areaStyle: {},\n        data: [320, 332, 301, 334, 390, 330, 320],\n      },\n      {\n        name: 'X-5',\n        type: 'line',\n        stack: 'counts',\n        label: {\n          show: true,\n          position: 'top',\n        },\n        areaStyle: {},\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\n      },\n    ],\n  };\n}\n"},3474:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component, OnInit } from '@angular/core';\nimport type { EChartsOption } from 'echarts';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-simple',\n  templateUrl: './basic-simple.component.html',\n  styleUrls: ['./basic-simple.component.scss'],\n})\nexport class BasicSimpleComponent implements OnInit {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-simple.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-simple.component.ts').default;\n  // IGNORE END\n  options: EChartsOption;\n  constructor() {}\n\n  ngOnInit(): void {\n    const xAxisData = [];\n    const data1 = [];\n    const data2 = [];\n\n    for (let i = 0; i < 100; i++) {\n      xAxisData.push('category' + i);\n      data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n    }\n\n    this.options = {\n      legend: {\n        data: ['bar', 'bar2'],\n        align: 'left',\n      },\n      tooltip: {},\n      xAxis: {\n        data: xAxisData,\n        silent: false,\n        splitLine: {\n          show: false,\n        },\n      },\n      yAxis: {},\n      series: [\n        {\n          name: 'bar',\n          type: 'bar',\n          data: data1,\n          animationDelay: idx => idx * 10,\n        },\n        {\n          name: 'bar2',\n          type: 'bar',\n          data: data2,\n          animationDelay: idx => idx * 10 + 100,\n        },\n      ],\n      animationEasing: 'elasticOut',\n      animationDelayUpdate: idx => idx * 5,\n    };\n  }\n}\n"},1429:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component } from '@angular/core';\nimport type { EChartsOption } from 'echarts';\nimport { ThemeOption } from 'ngx-echarts';\nimport { CoolTheme } from './cool-theme';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-themes',\n  templateUrl: './basic-themes.component.html',\n  styleUrls: ['./basic-themes.component.scss'],\n})\nexport class BasicThemesComponent {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-themes.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-themes.component.ts').default;\n  data = require('!!raw-loader!./cool-theme.ts').default;\n  // IGNORE END\n  theme: string | ThemeOption;\n  coolTheme = CoolTheme;\n  options: EChartsOption = {\n    title: {\n      left: '50%',\n      text: 'Nightingale Rose Diagram',\n      subtext: 'Mocking Data',\n      textAlign: 'center',\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: '{a} <br/>{b} : {c} ({d}%)',\n    },\n    legend: {\n      align: 'auto',\n      bottom: 10,\n      data: ['rose1', 'rose2', 'rose3', 'rose4', 'rose5', 'rose6', 'rose7', 'rose8'],\n    },\n    calculable: true,\n    series: [\n      {\n        name: 'area',\n        type: 'pie',\n        radius: [30, 110],\n        roseType: 'area',\n        data: [\n          { value: 10, name: 'rose1' },\n          { value: 5, name: 'rose2' },\n          { value: 15, name: 'rose3' },\n          { value: 25, name: 'rose4' },\n          { value: 20, name: 'rose5' },\n          { value: 35, name: 'rose6' },\n          { value: 30, name: 'rose7' },\n          { value: 40, name: 'rose8' },\n        ],\n      },\n    ],\n  };\n}\n"},5032:(p,r,o)=>{o.d(r,{Z:()=>c});const c="export const CoolTheme = {\n  color: [\n    '#b21ab4',\n    '#6f0099',\n    '#2a2073',\n    '#0b5ea8',\n    '#17aecc',\n    '#b3b3ff',\n    '#eb99ff',\n    '#fae6ff',\n    '#e6f2ff',\n    '#eeeeee',\n  ],\n\n  title: {\n    fontWeight: 'normal',\n    color: '#00aecd',\n  },\n\n  visualMap: {\n    color: ['#00aecd', '#a2d4e6'],\n  },\n\n  toolbox: {\n    color: ['#00aecd', '#00aecd', '#00aecd', '#00aecd'],\n  },\n\n  tooltip: {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    axisPointer: {\n      // Axis indicator, coordinate trigger effective\n      type: 'line', // The default is a straight line\uff1a 'line' | 'shadow'\n      lineStyle: {\n        // Straight line indicator style settings\n        color: '#00aecd',\n        type: 'dashed',\n      },\n      crossStyle: {\n        color: '#00aecd',\n      },\n      shadowStyle: {\n        // Shadow indicator style settings\n        color: 'rgba(200,200,200,0.3)',\n      },\n    },\n  },\n\n  // Area scaling controller\n  dataZoom: {\n    dataBackgroundColor: '#eee', // Data background color\n    fillerColor: 'rgba(144,197,237,0.2)', // Fill the color\n    handleColor: '#00aecd', // Handle color\n  },\n\n  timeline: {\n    lineStyle: {\n      color: '#00aecd',\n    },\n    controlStyle: {\n      color: '#00aecd',\n      borderColor: '00aecd',\n    },\n  },\n\n  candlestick: {\n    itemStyle: {\n      color: '#00aecd',\n      color0: '#a2d4e6',\n    },\n    lineStyle: {\n      width: 1,\n      color: '#00aecd',\n      color0: '#a2d4e6',\n    },\n    areaStyle: {\n      color: '#b21ab4',\n      color0: '#0b5ea8',\n    },\n  },\n\n  chord: {\n    padding: 4,\n    itemStyle: {\n      color: '#b21ab4',\n      borderWidth: 1,\n      borderColor: 'rgba(128, 128, 128, 0.5)',\n    },\n    lineStyle: {\n      color: 'rgba(128, 128, 128, 0.5)',\n    },\n    areaStyle: {\n      color: '#0b5ea8',\n    },\n  },\n\n  graph: {\n    itemStyle: {\n      color: '#b21ab4',\n    },\n    linkStyle: {\n      color: '#2a2073',\n    },\n  },\n\n  map: {\n    itemStyle: {\n      color: '#c12e34',\n    },\n    areaStyle: {\n      color: '#ddd',\n    },\n    label: {\n      color: '#c12e34',\n    },\n  },\n\n  gauge: {\n    axisLine: {\n      lineStyle: {\n        color: [\n          [0.2, '#dddddd'],\n          [0.8, '#00aecd'],\n          [1, '#f5ccff'],\n        ],\n        width: 8,\n      },\n    },\n  },\n};\n"},4935:(p,r,o)=>{o.d(r,{Z:()=>c});const c="import { Component, OnInit, OnDestroy } from '@angular/core';\nimport type { EChartsOption } from 'echarts';\n// IGNORE START\ndeclare const require: any;\n// IGNORE END\n\n@Component({\n  selector: 'app-basic-update',\n  templateUrl: './basic-update.component.html',\n  styleUrls: ['./basic-update.component.scss'],\n})\nexport class BasicUpdateComponent implements OnInit, OnDestroy {\n  // IGNORE START\n  html =\n    require('!!html-loader?{\"minimize\": {\"removeComments\":false,\"caseSensitive\":true}}!./basic-update.component.html')\n      .default;\n  component = require('!!raw-loader!./basic-update.component.ts').default;\n  // IGNORE END\n  options: EChartsOption;\n  updateOptions: EChartsOption;\n\n  private oneDay = 24 * 3600 * 1000;\n  private now: Date;\n  private value: number;\n  private data: DataT[];\n  private timer: any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // generate some random testing data:\n    this.data = [];\n    this.now = new Date(1997, 9, 3);\n    this.value = Math.random() * 1000;\n\n    for (let i = 0; i < 1000; i++) {\n      this.data.push(this.randomData());\n    }\n\n    // initialize chart options:\n    this.options = {\n      title: {\n        text: 'Dynamic Data + Time Axis',\n      },\n      tooltip: {\n        trigger: 'axis',\n        formatter: params => {\n          params = params[0];\n          const date = new Date(params.name);\n          return (\n            date.getDate() +\n            '/' +\n            (date.getMonth() + 1) +\n            '/' +\n            date.getFullYear() +\n            ' : ' +\n            params.value[1]\n          );\n        },\n        axisPointer: {\n          animation: false,\n        },\n      },\n      xAxis: {\n        type: 'time',\n        splitLine: {\n          show: false,\n        },\n      },\n      yAxis: {\n        type: 'value',\n        boundaryGap: [0, '100%'],\n        splitLine: {\n          show: false,\n        },\n      },\n      series: [\n        {\n          name: 'Mocking Data',\n          type: 'line',\n          showSymbol: false,\n          data: this.data,\n        },\n      ],\n    };\n\n    // Mock dynamic data:\n    this.timer = setInterval(() => {\n      for (let i = 0; i < 5; i++) {\n        this.data.shift();\n        this.data.push(this.randomData());\n      }\n\n      // update series data:\n      this.updateOptions = {\n        series: [\n          {\n            data: this.data,\n          },\n        ],\n      };\n    }, 1000);\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.timer);\n  }\n\n  randomData(): DataT {\n    this.now = new Date(this.now.getTime() + this.oneDay);\n    this.value = this.value + Math.random() * 21 - 10;\n    return {\n      name: this.now.toString(),\n      value: [\n        [this.now.getFullYear(), this.now.getMonth() + 1, this.now.getDate()].join('/'),\n        Math.round(this.value),\n      ],\n    };\n  }\n}\n\ntype DataT = {\n  name: string;\n  value: [string, number];\n};\n"}}]);